import { useEffect, useState } from "react";
import Head from "next/head";
import { motion, AnimatePresence } from "framer-motion";

import { useAuth } from "../hooks/useAuth";
import { getAllPosts, createPost } from "../lib/posts";

import Bio from "../components/Bio";
import Post from "../components/Post";
import PostForm from "../components/PostForm";
import styles from "../styles/Home.module.scss";
import profilePic from "../../public/static/images/profile.jpg";
import NavBar from "../components/NavBar/NavBar";

export default function Home({ posts: defaultPosts }) {
  const { user, logIn, logOut } = useAuth();
  const [posts, setPosts] = useState(defaultPosts);

  const postsSorted = posts.sort((a, b) => {
    return new Date(b.date) - new Date(a.date);
  });

  useEffect(() => {
    const getData = async () => {
      const response = await fetch(
        `${process.env.NEXT_PUBLIC_API_ENDPOINT}/api/posts`,
      );
      const { posts } = await response.json();
      setPosts(posts);
    };

    getData();
  }, []);

  const handleOnSubmit = async (data, e) => {
    e.preventDefault();

    await createPost(data);

    const posts = await getAllPosts();
    setPosts(posts);

    console.log(posts);
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <NavBar />

      <main className={styles.main}>
        <Bio
          headshot={profilePic}
          name="Nguyen Nguyen"
          tagline="A traveller on his journey to universe knowledge!"
          role="Fullstack Developer @ Integrify"
        />

        {user && <PostForm onSubmit={handleOnSubmit} />}

        <ul className={styles.post}>
          <AnimatePresence
            // initial={false}
            transition={{ ease: "linear", duration: 1, type: "tween" }}
          >
            {postsSorted.map((post) => {
              const { content, id, date } = post;
              return (
                <motion.li
                  key={id}
                  positionTransition
                  initial={{ opacity: 0, y: 50, scale: 0.3 }}
                  animate={{ opacity: 1, y: 0, scale: 1 }}
                  exit={{
                    opacity: 0,
                    scale: 0.5,
                    transition: { duration: 0.2 },
                  }}
                >
                  <Post
                    content={content}
                    date={new Intl.DateTimeFormat("en-US", {
                      dateStyle: "short",
                      timeStyle: "short",
                    }).format(new Date(date))}
                  />
                </motion.li>
              );
            })}
          </AnimatePresence>
        </ul>
      </main>
    </div>
  );
}

export async function getStaticProps() {
  const posts = await getAllPosts();

  return {
    props: {
      posts,
    },
  };
}
